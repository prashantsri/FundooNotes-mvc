@model FundooNotesData.Data.Models.ResetPasswordViewModel
@{
    Layout = null;
}


@{
    ViewBag.Title = "ResetPassword";
    Layout = "~/Views/Shared/_PageLayout.cshtml";
}
<!DOCTYPE html>

@*<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ResetPassword</title>
</head>
<body>
    <header></header>
    <h2>@ViewBag.Title.</h2>

    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4 style="margin-top:20px">Reset your password.</h4>
        <hr />

        @Html.HiddenFor(model => model.Code)
        <div class="form-group">
            @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.cpass, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.cpass, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Reset" />
            </div>
        </div>
    }
</body>
</html>*@

<div>
    <md-card flex-md="30" flex-lg="30" flex-sm="50" flex-xs="80" style="margin:auto;margin-top:5px">
        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div>
                <h2 align="center">Reset Password</h2>
                @Html.ValidationSummary("", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Code)
                <md-input-container class="md-block">
                    <label>Email</label>
                    <input type="email" ng-maxlength="35" name="Username"ng-model="Username" required />
                    <div ng-messages="form.Username.$error">
                        <div ng-message="required">This Is Required Field!</div>
                        <div ng-message="minlength">Email is too short</div>
                        <div ng-message="maxlength">Email is too long</div>
                        <div ng-message="Username">Email is Invalid</div>
                    </div>
                </md-input-container>
            </div>
            <div>
                <md-input-container class="md-block">
                    <label>password</label>
                    <input type="Password"  name="Password"  ng-pattern="/(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z])/" ng-model="Password" required />
                    <div ng-messages="form.Password.$error">
                        <div ng-message="required">This Is Required Field!</div>
                        <div ng-message="minlength">password is too short</div>
                        <div ng-message="maxlength">password is too long</div>
                        <div ng-message="pattern">password is Invalid</div>
                    </div>
                </md-input-container>
            </div>
            <div>
                <md-input-container class="md-block">
                    <label>Confirm Password</label>
                    <input type="password" name="cpass" ng-model="cpass" ng-pattern="Password" required />
                    <div ng-messages="form.cpass.$error">
                        <div ng-message="required">This Is Required Field!</div>
                        <div ng-message="minlength">confirm password is too short</div>
                        <div ng-message="maxlength">confirm password is too long</div>
                        <div ng-message="pattern">confirm password is Invalid</div>
                    </div>
                </md-input-container>
            </div>
            <div layout="row" layout-align="end" flex>
                <md-button class="md-raised md-primary" type="Submit">
                    reset

                </md-button>
            </div>
        }

    </md-card>
</div>